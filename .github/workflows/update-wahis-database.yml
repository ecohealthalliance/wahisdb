name: update-wahis-database

on:
  push:
     branches:
       - main
  #     - master
  #     - fix/*
  #     - feature/*
  #     - enhancement/*
  # pull_request:
  #   branches:
  #     - main
  #     - master
  workflow_dispatch:
    branches:
      - '*'
  schedule:
   - cron: "0 4 * * 2" # 4am tuesday

env:
  TARGETS_DATA_CUE: "always"

jobs:
  update-wahis-database:
    runs-on: ubuntu-latest                                # Run on GitHub Actions runner
    #runs-on: [self-hosted, linux, x64, onprem-aegypti]   # Run the workflow on EHA aegypti runner
    #runs-on: [self-hosted, linux, x64, onprem-prospero]  # Run the workflow on EHA prospero runner
    container:
      image: rocker/geospatial:4.2.0

    steps:
      - uses: actions/checkout@v2

      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y --no-install-recommends \
          libcurl4-openssl-dev \
          libssl-dev \
          curl
        shell: bash

      - name: Install Dolt
        run: |
          curl -L https://github.com/dolthub/dolt/releases/latest/download/install.sh | bash
        shell: bash

      - name: Unlock secrets
        if: ${{ !env.ACT }}
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

      - name: Install packages from renv.lock (with cache)
        if: ${{ !env.ACT }}  ## Doesn't work locally with ACT
        uses: r-lib/actions/setup-renv@v2
        with:
          cache-version: 2

      # - name: Install packages from renv.lock (local, no cache)
      #   if: ${{ env.ACT }}  ## Only locally with ACT, use `act -r` to reuse containers, effectively caching locally
      #   run: |
      #     renv::restore()
      #   shell: Rscript {0}

      - name: Provide Dolt credentials
        run: |
          dolt config --global --add user.email automation@ecohealthalliance.org
          dolt config --global --add user.name "eha_automation"
          dolt creds import .dolt/creds/tc1duse76setln1mv6gkjrpj1a2v963vli2c7n2586s80.jwk
          dolt config --list
        shell: bash

      - name: Clone Dolt database
        run: |
          echo "Cloning database"
          dolt clone ecohealthalliance/wahisdb
        shell: bash

      - name: Run targets
        if: always()
        run: |
          targets::tar_make()
        shell: Rscript {0}

      - name: Dolt commit
        run: |
          cd wahisdb
          rm ./.dolt/*.lock
          dolt add .
          if dolt status | grep -q modified:
          then
              dolt commit -m "Automated weekly database update"
              dolt push
          else
              echo "No changes since last run"
          fi
        shell: bash

      - name: On failure, launch a temporary interactive debugging session
        uses: mxschmitt/action-tmate@v3
        if: ${{ failure() }}
        timeout-minutes: 30
